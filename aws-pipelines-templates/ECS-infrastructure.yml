AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CodePipeline infrastructure for CI-CD testing'

Parameters:
  PythonVersion:
    Type: String
    Default: '3.9'
    Description: Python version to use
  RepositoryName:
    Type: String
    Description: Name of the RepositoryName
  BranchName:
    Type: String
    Description: Name of the repo branch with the project
  GitHubOwner:
    Type: String
    Description: Username of the owner of the github repository
  GitHubOAuthToken:
    Type: String
    Description: Authentication token to access github
    NoEcho: true


Resources:
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${AWS::StackName}-pipeline
      RoleArn: !GetAtt CodepipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: artifactbucket363757
      Stages:
        - Name: Source
          Actions:
           - Name: Source
             ActionTypeId:
               Category: Source
               Owner: ThirdParty
               Provider: GitHub
               Version: '1'
             Configuration:
               Owner: !Ref GitHubOwner
               Repo: !Ref RepositoryName
               Branch: !Ref BranchName
               OAuthToken: !Ref GitHubOAuthToken
             OutputArtifacts:
              - Name: SourceOutput
             RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref BuildProject
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
        - Name: Test
          Actions:
            - Name: Test
              ActionTypeId:
                Category: Test
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref TestProject
              InputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CodeDeploy
                Version: '1'
              Configuration:
                ApplicationName: !Ref DeployProject
                DeploymentGroupName: CICDIntegrationDeploymentGroup
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1

  artifactbucket363757:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "artifactbucket363757"
      VersioningConfiguration:
        Status: Enabled

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: "codebuild.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess

  CodepipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: "codepipeline.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess
        - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess
        - arn:aws:iam::aws:policy/AdministratorAccess-AWSElasticBeanstalk


  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-build
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        EnvironmentVariables:
          - Name: PYTHON_VERSION
            Value: !Ref PythonVersion
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml

  TestProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-test
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        EnvironmentVariables:
          - Name: PYTHON_VERSION
            Value: !Ref PythonVersion
      Source:
        Type: CODEPIPELINE
        BuildSpec: testspec.yml


  DeployProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-deploy
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        EnvironmentVariables:
          - Name: PYTHON_VERSION
            Value: !Ref PythonVersion
      Source:
        Type: CODEPIPELINE
        BuildSpec: deployspec.yml

Outputs:
  BuildProjectName:
    Description: Name of the build project
    Value: !Ref BuildProject
    Export:
      Name: !Sub ${AWS::StackName}-BuildProject

